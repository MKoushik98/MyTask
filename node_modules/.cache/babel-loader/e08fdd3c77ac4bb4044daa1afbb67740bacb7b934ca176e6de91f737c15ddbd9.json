{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Projects\\\\Task_management\\\\task\\\\src\\\\components\\\\Taskmanager\\\\TaskManager.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport TaskItem from \"./TaskItem\";\nimport \"./taskmanager.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskManager() {\n  _s();\n  const {\n    user,\n    tasks,\n    addTask,\n    error,\n    logout\n  } = useContext(AuthContext);\n  const [taskForm, setTaskForm] = useState({\n    title: \"\",\n    description: \"\"\n  });\n  if (!user) return null;\n  const handleChange = e => setTaskForm({\n    ...taskForm,\n    [e.target.name]: e.target.value\n  });\n  const handleAddTask = () => {\n    if (!taskForm.title.trim() || !taskForm.description.trim()) {\n      return alert(\"Both title and description required\");\n    }\n    addTask(taskForm.title, taskForm.description);\n    setTaskForm({\n      title: \"\",\n      description: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Tasks of \", user]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        value: taskForm.title,\n        onChange: handleChange,\n        placeholder: \"Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"description\",\n        value: taskForm.description,\n        onChange: handleChange,\n        placeholder: \"Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskManager, \"3+sEhVJjaafnxzstYB7T+jtyhn0=\");\n_c = TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["useContext","useState","AuthContext","TaskItem","jsxDEV","_jsxDEV","TaskManager","_s","user","tasks","addTask","error","logout","taskForm","setTaskForm","title","description","handleChange","e","target","name","value","handleAddTask","trim","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","placeholder","style","color","map","task","id","_c","$RefreshReg$"],"sources":["D:/React_Projects/Task_management/task/src/components/Taskmanager/TaskManager.jsx"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport \"./taskmanager.css\";\r\n\r\nexport default function TaskManager() {\r\n  const { user, tasks, addTask, error, logout } = useContext(AuthContext);\r\n  const [taskForm, setTaskForm] = useState({ title: \"\", description: \"\" });\r\n\r\n  if (!user) return null;\r\n\r\n  const handleChange = (e) =>\r\n    setTaskForm({ ...taskForm, [e.target.name]: e.target.value });\r\n\r\n  const handleAddTask = () => {\r\n    if (!taskForm.title.trim() || !taskForm.description.trim()) {\r\n      return alert(\"Both title and description required\");\r\n    }\r\n    addTask(taskForm.title, taskForm.description);\r\n    setTaskForm({ title: \"\", description: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Tasks of {user}</h2>\r\n      <button onClick={logout}>Logout</button>\r\n\r\n      <div>\r\n        <input\r\n          name=\"title\"\r\n          value={taskForm.title}\r\n          onChange={handleChange}\r\n          placeholder=\"Task Title\"\r\n        />\r\n        <input\r\n          name=\"description\"\r\n          value={taskForm.description}\r\n          onChange={handleChange}\r\n          placeholder=\"Task Description\"\r\n        />\r\n        <button onClick={handleAddTask}>Add Task</button>\r\n      </div>\r\n\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <TaskItem key={task.id} task={task} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}