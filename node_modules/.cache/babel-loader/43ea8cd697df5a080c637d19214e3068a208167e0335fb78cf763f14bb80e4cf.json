{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Projects\\\\Task_management\\\\task\\\\src\\\\components\\\\TaskManager.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { AuthContext } from \"../components/context/AuthContext\";\nimport TaskItem from \"./TaskItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskManager() {\n  _s();\n  const {\n    user,\n    tasks,\n    addTask,\n    error\n  } = useContext(AuthContext);\n  const [newTask, setNewTask] = useState(\"\");\n  if (!user) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Tasks of \", user]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      placeholder: \"New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (!newTask.trim()) return alert(\"Task title required\");\n        addTask(newTask);\n        setNewTask(\"\");\n      },\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskManager, \"JHH25E/7Eoj9Do0lHU13YbU2aHw=\");\n_c = TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["useContext","useState","AuthContext","TaskItem","jsxDEV","_jsxDEV","TaskManager","_s","user","tasks","addTask","error","newTask","setNewTask","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","trim","alert","style","color","map","task","id","_c","$RefreshReg$"],"sources":["D:/React_Projects/Task_management/task/src/components/TaskManager.jsx"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { AuthContext } from \"../components/context/AuthContext\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nexport default function TaskManager() {\r\n  const { user, tasks, addTask, error } = useContext(AuthContext);\r\n  const [newTask, setNewTask] = useState(\"\");\r\n\r\n  if (!user) return null;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Tasks of {user}</h2>\r\n      <input\r\n        value={newTask}\r\n        onChange={(e) => setNewTask(e.target.value)}\r\n        placeholder=\"New Task\"\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          if (!newTask.trim()) return alert(\"Task title required\");\r\n          addTask(newTask);\r\n          setNewTask(\"\");\r\n        }}\r\n      >\r\n        Add\r\n      </button>\r\n\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <TaskItem key={task.id} task={task} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,WAAW,QAAQ,mCAAmC;AAC/D,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGX,UAAU,CAACE,WAAW,CAAC;EAC/D,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,IAAI,CAACO,IAAI,EAAE,OAAO,IAAI;EAEtB,oBACEH,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,GAAI,WAAS,EAACN,IAAI;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBb,OAAA;MACEc,KAAK,EAAEP,OAAQ;MACfQ,QAAQ,EAAGC,CAAC,IAAKR,UAAU,CAACQ,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC;IAAU;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACFb,OAAA;MACEmB,OAAO,EAAEA,CAAA,KAAM;QACb,IAAI,CAACZ,OAAO,CAACa,IAAI,CAAC,CAAC,EAAE,OAAOC,KAAK,CAAC,qBAAqB,CAAC;QACxDhB,OAAO,CAACE,OAAO,CAAC;QAChBC,UAAU,CAAC,EAAE,CAAC;MAChB,CAAE;MAAAC,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAERP,KAAK,iBAAIN,OAAA;MAAGsB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAd,QAAA,EAAEH;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjDb,OAAA;MAAAS,QAAA,EACGL,KAAK,CAACoB,GAAG,CAAEC,IAAI,iBACdzB,OAAA,CAACF,QAAQ;QAAe2B,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACC,EAAE;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACX,EAAA,CAjCuBD,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}