{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Projects\\\\Task_management\\\\task\\\\src\\\\components\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState(null);\n\n  // ðŸ”¹ Register\n  const register = async formData => {\n    try {\n      setError(null);\n      await axios.post(\"https://task-management-backend-1dht.onrender.com/register\", formData);\n      alert(\"Registration successful! Please login.\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Registration failed\");\n    }\n  };\n\n  // ðŸ”¹ Login\n  const login = async (username, password) => {\n    try {\n      setError(null);\n      const res = await axios.post(\"https://task-management-backend-1dht.onrender.com/login\", {\n        username,\n        password\n      });\n      setUser(res.data.username);\n      fetchTasks(res.data.username);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Login failed\");\n    }\n  };\n\n  // ðŸ”¹ Logout\n  const logout = () => {\n    setUser(null);\n    setTasks([]);\n  };\n\n  // ðŸ”¹ Fetch tasks\n  const fetchTasks = async username => {\n    try {\n      const res = await axios.get(`https://task-management-backend-1dht.onrender.com/tasks/${username}`);\n      setTasks(res.data);\n    } catch (err) {\n      setError(\"Failed to fetch tasks\");\n    }\n  };\n\n  // ðŸ”¹ Add task\n  const addTask = async (title, description) => {\n    try {\n      setError(null);\n      const res = await axios.post(`http://localhost:5000/tasks/${user}`, {\n        title,\n        description\n      });\n      setTasks([...tasks, res.data]);\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || \"Task creation failed\");\n    }\n  };\n\n  // ðŸ”¹ Update task\n  const updateTask = async (id, title, description) => {\n    try {\n      setError(null);\n      const res = await axios.put(`http://localhost:5000/tasks/${user}/${id}`, {\n        title,\n        description\n      });\n      setTasks(tasks.map(t => t.id === id ? res.data : t));\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || \"Task update failed\");\n    }\n  };\n\n  // ðŸ”¹ Delete task\n  const deleteTask = async id => {\n    try {\n      setError(null);\n      await axios.delete(`http://localhost:5000/tasks/${user}/${id}`);\n      setTasks(tasks.filter(t => t.id !== id));\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || \"Task deletion failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      error,\n      register,\n      login,\n      logout,\n      tasks,\n      addTask,\n      updateTask,\n      deleteTask\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Xuo/DkoaDn4xlATHW/ZyjWXId88=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","tasks","setTasks","error","setError","register","formData","post","alert","err","_err$response","_err$response$data","response","data","message","login","username","password","res","fetchTasks","_err$response2","_err$response2$data","logout","get","addTask","title","description","_err$response3","_err$response3$data","updateTask","id","put","map","t","_err$response4","_err$response4$data","deleteTask","delete","filter","_err$response5","_err$response5$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React_Projects/Task_management/task/src/components/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  // ðŸ”¹ Register\r\n  const register = async (formData) => {\r\n    try {\r\n      setError(null);\r\n      await axios.post(\"https://task-management-backend-1dht.onrender.com/register\", formData);\r\n      alert(\"Registration successful! Please login.\");\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Registration failed\");\r\n    }\r\n  };\r\n\r\n  // ðŸ”¹ Login\r\n  const login = async (username, password) => {\r\n    try {\r\n      setError(null);\r\n      const res = await axios.post(\"https://task-management-backend-1dht.onrender.com/login\", { username, password });\r\n      setUser(res.data.username);\r\n      fetchTasks(res.data.username);\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Login failed\");\r\n    }\r\n  };\r\n\r\n  // ðŸ”¹ Logout\r\n  const logout = () => {\r\n    setUser(null);\r\n    setTasks([]);\r\n  };\r\n\r\n  // ðŸ”¹ Fetch tasks\r\n  const fetchTasks = async (username) => {\r\n    try {\r\n      const res = await axios.get(`https://task-management-backend-1dht.onrender.com/tasks/${username}`);\r\n      setTasks(res.data);\r\n    } catch (err) {\r\n      setError(\"Failed to fetch tasks\");\r\n    }\r\n  };\r\n\r\n  // ðŸ”¹ Add task\r\n  const addTask = async (title, description) => {\r\n    try {\r\n      setError(null);\r\n      const res = await axios.post(`http://localhost:5000/tasks/${user}`, {\r\n        title,\r\n        description,\r\n      });\r\n      setTasks([...tasks, res.data]);\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Task creation failed\");\r\n    }\r\n  };\r\n\r\n  // ðŸ”¹ Update task\r\n  const updateTask = async (id, title, description) => {\r\n    try {\r\n      setError(null);\r\n      const res = await axios.put(`http://localhost:5000/tasks/${user}/${id}`, {\r\n        title,\r\n        description,\r\n      });\r\n      setTasks(tasks.map((t) => (t.id === id ? res.data : t)));\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Task update failed\");\r\n    }\r\n  };\r\n\r\n  // ðŸ”¹ Delete task\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      setError(null);\r\n      await axios.delete(`http://localhost:5000/tasks/${user}/${id}`);\r\n      setTasks(tasks.filter((t) => t.id !== id));\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Task deletion failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        error,\r\n        register,\r\n        login,\r\n        logout,\r\n        tasks,\r\n        addTask,\r\n        updateTask,\r\n        deleteTask,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}